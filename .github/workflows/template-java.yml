name: deploying the java project actions on EC2
on: workflow_dispatch
jobs:
  deploy-on-ec2:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out the code from the repository
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}  # Your SSH private key stored in secrets
      
      - name: Connect to EC2 instance and install OpenJDK 17
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
          # Update package list
          sudo apt update

          # Install OpenJDK 17
          sudo apt install openjdk-17-jdk -y

          # Set Java 17 as default
          sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
          sudo update-alternatives --set javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac

          # Verify Java installation
          java -version
          javac -version
          
          # Install Maven 3.8.7
          wget https://dlcdn.apache.org/maven/maven-3/3.8.7/binaries/apache-maven-3.8.7-bin.tar.gz
          sudo tar xzvf apache-maven-3.8.7-bin.tar.gz -C /opt
          sudo ln -s /opt/apache-maven-3.8.7 /opt/maven
          
          # Install Maven (latest version from the repository)
          sudo apt install maven -y

          # Verify Maven installation
          mvn -version

      - name: Clone project using HTTPS with GitHub token
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
          sudo apt update -y
          sudo apt install git -y
          
          # Remove any existing SSH config that may interfere with cloning via HTTPS
          rm -f ~/.ssh/config

          # Clone the project using HTTPS and GitHub token
          if [ ! -d "java-demo-project" ]; then
            git clone https://<your-github-username>:${{ secrets.GITHUB_TOKEN }}@github.com/surajchauhan2310/java-demo-project.git
          fi
          
          cd java-demo-project
          ls -la
          EOF

      - name: Verify project directory
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} 'cd java-demo-project && ls -la'

          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} 'cd /home/ubuntu/java-demo-project && mvn clean'

      - name: Build the package using Maven command
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} 'cd /home/ubuntu/java-demo-project && mvn package'

      - name: Run the app
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} 'cd /home/ubuntu/java-demo-project/target && java -jar suraj-0.0.1-SNAPSHOT.jar'
        
        









































